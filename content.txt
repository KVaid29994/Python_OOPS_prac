- class and object (Example)

In Python, a class is a blueprint for creating objects. It defines a set of attributes and
methods that the objects created from the class will have. 
Classes allow you to encapsulate data and functionality together, 
enabling object-oriented programming (OOP)

- why is python called Object oriented programming?

Python is called an Object-Oriented Programming (OOP) 
language because it supports the principles of object-oriented 
programming, which include encapsulation, inheritance, polymorphism,
and abstraction. These principles allow developers to model real-world entities 
as objects and organize code in a modular and reusable way.


